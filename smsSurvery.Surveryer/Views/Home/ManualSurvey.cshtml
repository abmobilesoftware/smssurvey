@model smsSurvery.Surveryer.Controllers.ManualSurvey

@{
   ViewBag.Title = "Send survey manually";
}

<h2>Start manual survey</h2>

<h5>Add tags that you want to associate to your survey</h5>
<div id="tagContainer">
   <input name="filterTag" id="filterTag" type="text" />
</div>

<div id="run-action">
   <form id="run-action-form" action="/DisplayProgress/Index.aspx" method="post" target="progress-iframe">
      <input type="hidden" id="phone-numbers-input" name="customerNumbers"/>
      <input type="hidden" id="sms-text-input" name="smsText" />
      <button type="button" id="run" class="btn btn-primary">Run</button>
   </form>
</div>

<div id="progress-section" class="hide">
   <div class="progress">
     <div class="progress-bar progress-bar-success" style="width: 35%">
       <span class="sr-only sr-only-success">35% Complete (success)</span>
     </div>  
     <div class="progress-bar progress-bar-danger" style="width: 10%">
       <span class="sr-only sr-only-danger">10% Complete (danger)</span>
     </div>
   </div>
   <div id="expand-log-btn-wrapper">
      <button type="button" class="btn btn-danger" id="expand-log-btn">Expand failed log</button>
   </div>
   <div id="progress-table-wrapper" class="hide">
      <table id="progress-log">
         <thead>
            <tr>
               <th>Client phone number</th>
               <th>Delivery status</th>
             </tr>
         </thead>
      </table>
   </div>
</div>

<div class="alert alert-danger hide"></div>
<div class="alert alert-success hide"></div>
<div id="action-1">
   <h3><strong>1. Choose your action</strong></h3>
   <ul class="nav nav-tabs" id="action-tabs">
      <li><a href="#sms-tab" class="sms-link" data-toggle="tab">Quick SMS</a></li>
      <li><a href="#survey-tab" class="survey-link" data-toggle="tab">Survey</a></li>
   </ul>

   <div class="tab-content tab-choose-action">
      <div class="tab-pane active" id="sms-tab">
         <div id="quickSms">
            <textarea id="sms-message-textarea" placeholder="Insert SMS text here..."></textarea>
            <div id="facts-sms-wrapper">
               <table class="facts-sms">
                  <tr>
               <td><strong>Nr of characters</strong></td><td id="noOfCharacters"></td>
                 </tr>
                  <tr>
               <td><strong>Nr of sms</strong></td><td id="noOfSms"></td>
                 </tr>
               </table>
            </div>
         </div>
      </div>
      <div class="tab-pane" id="survey-tab">
         <table>
            <thead>
               <th>Survey to run</th>
               <th>Choose the survey language</th>
               <th>Survey type</th>
            </thead>
            <tr>
               <td>
                  @Html.DropDownList("ID", "Choose a survey")
               </td>
               <td>
                  @Html.DropDownList("Language", new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "English", Value = "en-US" }, new SelectListItem() { Text = "Romanian", Value = "ro-RO" } }, "Value", "Text"))
               </td>
               <td>
                  @Html.DropDownList("SurveyType", new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "Mobile survey", Value = "mobile" }, new SelectListItem() { Text = "Full SMS survey", Value = "sms" } }, "Value", "Text"))
               </td>
            </tr>
         </table>
         <div><span id="runSurveyResult"></span></div>
      </div>
   </div>
</div>

<div id="action-2">
   <h3><strong>2. Add contacts</strong></h3>
   <div id="add-contacts">
      @using (Html.BeginForm("ManualSurvey", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
      {
         @Html.AntiForgeryToken()
         @Html.Hidden("selectedSurveyId", (int)@ViewBag.DefaultSelectionForSurveyId);
         <p>Import bulk</p>
         <input class="btn " type="file" id="cvsFile" name="cvsFile" />
         <input class="btn btn-info" type="submit" name="btnImport" value="Import CVS" />
      }

      <p>or</p>
      <label>Add customer phone number (numbers must start with the country prefix)</label>
      <input type="text" id="newphonenr" placeholder="Ex: 40758526698" />
      <button id="add" class="btn btn-info">Add</button>
   </div>
   <div id="table-scroll">
      <table class="table table-striped" id="phonenumbers">
         <thead>
            <th>Phone number
            </th>
            <th>Actions
            </th>
         </thead>
         @if (ViewBag.PhoneNumbers != null)
         {
            foreach (var phNr in ViewBag.PhoneNumbers)
            {
            <tr type="phnr">
               <td type="nr">@phNr</td>
               <td>
                  <button class="remove btn btn-danger btn-small">Remove</button></td>

            </tr>
            }
         }
      </table>
   </div>
   <div class="clear"></div>
</div>
<div if="userList"></div>


@section css{
   @Styles.Render("~/Content/custom")
   @Styles.Render("~/Content/manual-survey")
}
@section Scripts {
   @Scripts.Render("~/bundles/referencescripts")
   <script>
      /* MB Alert blinking - used also in managedDevices, style in devices.css & manual-survey
         TODO: Condense
         */
      var noOfBlinks = 3;
      var blinkTimer;
      var cBlinkInterval = 500;

      function startBlinking() {
         noOfBlinks = 3;
         blinkTimer = setInterval(blinking, cBlinkInterval);
      }
      function blinking() {
         if (noOfBlinks > 0) {
            if ($(".alert").hasClass("alert-visible")) {
               $(".alert").removeClass("alert-visible");
               $(".alert").addClass("alert-invisible");
            } else {
               $(".alert").addClass("alert-visible");
               $(".alert").removeClass("alert-invisible");
               noOfBlinks = noOfBlinks - 1;
            }
         } else {
            clearInterval(blinkTimer);
         }
      }
      /* End alert blinking */

      /* Display alerts */
      var showDangerAlert = function (dangerText) {
         $(".alert").hide();
         $(".alert-danger").html(dangerText);
         $(".alert-danger").show();
         startBlinking();
      }

      var showSuccessAlert = function (successText) {
         $(".alert").hide();
         $(".alert-success").html(successText);
         $(".alert-success").show();
         startBlinking();
      }

      /* Enable disable button */
      var disableRunButton = function () {
         $("#run").attr("disabled", "disabled");
         $("#run").html("Running...");
      }

      var enableRunButton = function () {
         $("#run").removeAttr("disabled");
         $("#run").html("Run");
      }

      // initialize
      function resetSmsTextArea() {
         $("#sms-message-textarea").val("");
         $("#noOfCharacters").html("0");
         $("#noOfSms").html("0 sms");
      }

      function BeginProcess() {
         // Create an iframe.
         var iframe = document.createElement("iframe");
         iframe.name = "progress-iframe";

         // Make the iframe invisible.
         iframe.style.display = "none";

         // Add the iframe to the DOM.  The process
         //  will begin execution at this point.
         document.body.appendChild(iframe);
      }

      function UpdateProgress(PercentSuccess, PercentFailed, ToNumber, MessageStatus) {
         $("#progress-section").removeClass("hide");
         var textSuccess = "Success: " + PercentSuccess + "%";
         var textFailed = "Failed: " + PercentFailed + "%";
         $(".progress-bar-success").css("width", PercentSuccess + "%");
         $(".progress-bar-danger").css("width", PercentFailed + "%");

         if (PercentSuccess > 20) {
            $(".sr-only-success").html(textSuccess);
         } else {
            $(".sr-only-success").html("");
         }
         if (PercentFailed > 20) {
            $(".sr-only-danger").html(textFailed);
         } else {
            $(".sr-only-danger").html("");
         }

         if (!MessageStatus) {
            var messageStatusAsString = MessageStatus ? "success" : "failed";
            var newRow = "<tr><td>" + ToNumber + "</td><td class='deliveryFailed'>" + messageStatusAsString + "</td></tr>";
            $("#progress-log").append(newRow);
         }
      }

      function UpdateFinish() {
         enableRunButton();
         resetSmsTextArea();
         showSuccessAlert("Operation completed");
      }

      $(function () {
         $("#expand-log-btn").click(function (event) {
            event.preventDefault();
            if ($("#progress-table-wrapper").hasClass("hide")) {
               $("#progress-table-wrapper").removeClass("hide");
               $("#progress-table-wrapper").show();
            } else {
               $("#progress-table-wrapper").addClass("hide");
               $("#progress-table-wrapper").hide();
            }
            
         });

         var self = this;
         BeginProcess();
         var sendSms = true;
         /* Tabs */
         $("#action-tabs .sms-link").click(function (e) {
            e.preventDefault();
            $(this).tab("show");
            sendSms = true;
         });
         $("#action-tabs .survey-link").click(function (e) {
            e.preventDefault();
            $(this).tab("show");
            sendSms = false;
         });
         $('#action-tabs a:first').tab('show');

         $('#add').click(function () {
            var newtelno = $("#newphonenr").val();
            if (newtelno !== "") {
               //test the phone number to be added
               var regex = /^\d+$/;
               if (regex.test(newtelno)) {
                  var elem = '<tr type="phnr"> <td type="nr">' + newtelno + '</td><td><button class="remove btn btn-danger btn-small"> Remove</button></td></tr>';
                  $('#phonenumbers tr:last').after(elem);
               } else {
                  showDangerAlert("only digits are allowed");
               }

               $("#newphonenr").val("");
            }
         });
         //DA when the remove button is clicked, remove the set phone number
         $('table').on('click', '.remove', function (event) {
            var trow = $(event.target).parents('tr')[0];
            trow.remove();
         });

         $('#ID').change(function () {
            var newVal = $(this).val();
            $('#selectedSurveyId').val(newVal);
         });

         function isDoubleByte(str) {
            for (var i = 0, n = str.length; i < n; i++) {
               if (str.charCodeAt(i) > 255) { return true; }
            }
            return false;
         }

         resetSmsTextArea();
         enableRunButton();

         $("#sms-message-textarea").on("keyup", function (event) {
            var smsText = $("#sms-message-textarea").val();
            $("#noOfCharacters").html(smsText.length);
            var nrOfSms = smsText.length / 160;
            var isUnicode = false;
            if (isDoubleByte(smsText)) {
               nrOfSms = smsText.length / 70;
               isUnicode = true;
            }
            $("#noOfSms").html(Math.ceil(nrOfSms) + " sms" + (isUnicode ? "(unicode)" : ""));
         });

         $('#run').click(function () {
            if (sendSms) {
               var smsText = $("#sms-message-textarea").val();
               if (smsText == "") {
                  showDangerAlert("Please enter the text of the sms");
                  return;
               }
               var phonenumbers = $('tr[type=phnr] td[type=nr]');
               if (phonenumbers.length === 0) {
                  //display message that we should have at least 1 number
                  showDangerAlert("Please add at least 1 phone number");
                  return;
               }
               var numbers = new Array();
               $.each(phonenumbers, function (index, value) {
                  numbers.push(value.textContent);
               });
               disableRunButton();
               $(".alert").hide();
               $("#phone-numbers-input").val(numbers.join(","));
               $("#sms-text-input").val(smsText);
               $("#run-action-form").submit();
               /*$.ajax({
                  data: {
                     customerNumbers: numbers,
                     smsText: smsText                     
                  },
                  url: "/Home/SendSmsForNumbers",
                  traditional: true,
                  async: true,
                  cache: false,
                  success: function (data) {
                     //$("#runSurveyResult").html(data);
                     $("#sms-message-textarea").val("");
                     enableRunButton();
                     resetSmsTextArea();
                     showSuccessAlert(data);
                  }
               });*/
            } else {
               //we should have a survey selected
               var selSurveyId = $('#ID').find(":selected").attr('value');
               if (selSurveyId === "") {
                  //display message that you should select a survey
                  showDangerAlert("Please select a survey to run");
                  return;
               }
               //we should have at least 1 phone number
               var phonenumbers = $('tr[type=phnr] td[type=nr]');
               if (phonenumbers.length === 0) {
                  //display message that we should have at least 1 number
                  showDangerAlert("Please add at least 1 phone number");
                  return;
               }
               //we should have a surveyLanguage
               var surveyLanguage = $('#Language').find(":selected").attr('value');
               if (surveyLanguage === "") {
                  //display message that you should select a survey
                  showDangerAlert("Please select a survey language");
                  return;
               }
               var numbers = new Array();
               $.each(phonenumbers, function (index, value) {
                  numbers.push(value.textContent);
               });
               var tags = new Array();
               var delimiter = ',';
               tags = $("#filterTag").val().split(delimiter);
               //if there are no tags the split will return [""] and this will be sent to the server
               //we guard against this
               if ("" === tags[0]) {
                  tags = [];
               }

               disableRunButton();
               var surveyType = $('#SurveyType').find(":selected").attr('value');
               var sendMobile = surveyType === "sms" ? false : true;
               $.ajax({
                  data: {
                     surveyid: selSurveyId,
                     customerNumbers: numbers,
                     sendMobile: sendMobile,
                     tags: tags,
                     surveyLanguage: surveyLanguage
                  },
                  url: "/Home/RunSurveyForNumbers",
                  traditional: true,
                  async: true,
                  cache: false,
                  success: function (data) {
                     //$("#runSurveyResult").html(data);
                     enableRunButton();
                     showSuccessAlert(data);
                  }
               });
            }
         });

         $("#filterTag").tagsInput({
            'height': '22px',
            'width': 'auto',
            'autocomplete_url': "/Home/FindMatchingTags",
            'onAddTag': function (tagValue) {
            },
            'onRemoveTag': function (tagValue) {
            },
            'defaultText': 'add tag here',
            'placeholder': 'add tag here',
            'interactive': true,
            'placeholderColor': '#666666',
            'minChars': 3,
            'maxChars': 10,
            'autocomplete': {
               autoFocus: true,
               minLength: 1
            }
         });

         $('#myTab a').click(function (e) {
            e.preventDefault()
            $(this).tab('show')
         })       
      });
   </script>
}